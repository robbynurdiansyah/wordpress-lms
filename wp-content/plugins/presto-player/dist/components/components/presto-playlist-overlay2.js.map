{"file":"presto-playlist-overlay2.js","mappings":"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","names":["__stencil_proxyCustomElement"],"sources":["src/components/core/features/presto-playlist-overlay/presto-playlist-overlay.scss?tag=presto-playlist-overlay&encapsulation=shadow","src/components/core/features/presto-playlist-overlay/presto-playlist-overlay.tsx"],"sourcesContent":[":host {\n  display: block;\n  cursor: pointer;\n}\n.playlist__overlay {\n  color: #fff;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  z-index: 999;\n\n  h2,\n  p {\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n  }\n\n  h2 {\n    margin-bottom: 0.4em;\n  }\n\n  .playlist__overlay-wrap {\n    top: 0;\n    position: absolute;\n    padding: 25px;\n    left: 0;\n    display: grid;\n    gap: 1em;\n  }\n  .playlist__overlay-buttons {\n    display: flex;\n    gap: 13px;\n    button {\n      background: rgba(255, 255, 255, 0.8);\n      border-radius: 5px;\n      padding: 10px 12px;\n      border: 1px solid #ffffff;\n      font-weight: 500;\n      font-size: 13px;\n      line-height: 15px;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      gap: 16px;\n      cursor: pointer;\n\n      &.previous {\n        background-color: transparent;\n        border: 1px solid #ffffff;\n        margin-right: 10px;\n        color: #ffffff;\n      }\n\n      &.next {\n        background: linear-gradient(to right, rgba(255, 255, 255) 50%, rgba(255, 255, 255, 0.8) 50%);\n        background-size: 200% 100%;\n        background-position: right bottom;\n\n        &.fill-button {\n          transition: all var(--playlist-transition-duration, 5s) ease-out;\n          background-position: left bottom;\n        }\n\n        &.disabled {\n          background-color: transparent;\n          border: 1px solid #ffffff;\n          color: #ffffff;\n          background: none;\n        }\n      }\n    }\n  }\n}\n","import { Component, h, Prop, EventEmitter, Event, State, Host, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'presto-playlist-overlay',\n  styleUrl: 'presto-playlist-overlay.scss',\n  shadow: true,\n})\nexport class PrestoPlaylistOverlay {\n  /**\tCaching timout action */\n  private timeout: any;\n\n  /** Title of the upcoming next playlist item */\n  @Prop() nextItemTitle: string;\n\n  /** String for the Button that says `Next Video` */\n  @Prop() nextItemString: string;\n\n  /** Transition duration for next video. */\n  @Prop() transitionDuration: number = 5;\n\n  /** Flag to handle if this item is the last item in the list. */\n  @Prop() isLastItem: boolean = false;\n\n  /** Rewatch item event */\n  @Event() rewatch: EventEmitter<void>;\n\n  /** Next item play event */\n  @Event() next: EventEmitter<void>;\n\n  /** Class value for the Next button to show the fill animation. */\n  @State() animating: boolean = false;\n\n  /** Visibility flag for the Overlay */\n  @Prop() show: boolean = false;\n\n  /**\n   * Watch for show changes\n   */\n  @Watch('show')\n  handleShow() {\n    // we are not showing or this is the last item.\n    if (!this.show || this.isLastItem) {\n      this.animating = false;\n      return;\n    }\n\n    // start animating after 200ms\n    setTimeout(() => {\n      this.animating = true;\n    }, 200);\n\n    this.timeout = setTimeout(() => {\n      if (this.show) {\n        this.handleNext();\n      }\n    }, (this.transitionDuration || 5) * 1000 + 200);\n  }\n\n  /**\n   * Handle the rewatch click event.\n   */\n  handleRewatch() {\n    this.rewatch.emit();\n  }\n\n  /**\n   * Handle the next click event.\n   */\n  handleNext() {\n    this.next.emit();\n  }\n\n  /**\n   * Lifecycle: disconnected\n   */\n  disconnectedCallback() {\n    clearTimeout(this.timeout);\n  }\n\n  @Watch('animating')\n  handleAnimatingChange(val) {\n    if (val) return;\n    clearTimeout(this.timeout);\n  }\n\n  /**\n   * Rendering the component\n   */\n  render() {\n    if (!this.show) {\n      return (\n        <Host>\n          <div style={{ display: 'none' }}></div>\n        </Host>\n      );\n    }\n    const upNext = window?.prestoPlayer?.i18n?.upNext || 'Up Nexts';\n    const startOver = window?.prestoPlayer?.i18n?.startOver || 'Start Over';\n    const rewatch = window?.prestoPlayer?.i18n?.rewatch || 'Rewatch';\n    return (\n      <div\n        class=\"playlist__overlay\"\n        onClick={e => {\n          // This prevents the video from playing/pausing when the overlay is clicked.\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          this.animating = false;\n        }}\n      >\n        <div class=\"playlist__overlay-wrap\">\n          {!this.isLastItem ? <p>{upNext}:</p> : <p>{startOver}:</p>}\n\n          <h2\n            style={{\n              overflowX: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              maxWidth: '100%',\n              lineHeight: '1.3',\n            }}\n          >\n            {this.nextItemTitle}\n          </h2>\n\n          <div class=\"playlist__overlay-buttons\">\n            <button class=\"previous\" onClick={() => this.handleRewatch()}>\n              <svg width=\"15\" height=\"9\" viewBox=\"0 0 15 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M15 0V9L8 4.5L15 0Z\" fill=\"white\" />\n                <path d=\"M7 0V9L0 4.5L7 0Z\" fill=\"white\" />\n              </svg>\n              {rewatch}\n            </button>\n            <button\n              class={{\n                'next': true,\n                'fill-button': this.animating,\n              }}\n              onClick={e => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                this.handleNext();\n              }}\n            >\n              <svg width=\"10\" height=\"12\" viewBox=\"0 0 10 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M0 0V12L9.5 6L0 0Z\" fill=\"black\" />\n              </svg>\n              {!this.isLastItem ? 'Next ' + (this?.nextItemString || 'Video') : startOver}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}