{"file":"presto-email-overlay2.js","mappings":";;;;;AAAA,MAAM,qBAAqB,GAAG,sBAAsB;;MCYvC,kBAAkB,iBAAAA,kBAAA,CAAA,MAAA,kBAAA,SAAA,WAAA,CAAA;;;;;IAY7B,iBAAiB,GAAA;QACf,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE;AAClB,QAAA,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC9C,QAAA,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAG3D,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI;;AAGnB,IAAA,cAAc,CAAC,CAAC,EAAA;;QACd,IAAI,CAAC,WAAW,GAAG,CAAA,EAAA,GAAA,CAAC,KAAD,IAAA,IAAA,CAAC,KAAD,MAAA,GAAA,MAAA,GAAA,CAAC,CAAE,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,IAAI,CAAC,WAAW;QAC9C,IAAI,CAAC,QAAQ,GAAG,CAAA,EAAA,GAAA,CAAC,KAAD,IAAA,IAAA,CAAC,KAAD,MAAA,GAAA,MAAA,GAAA,CAAC,CAAE,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,IAAI,CAAC,QAAQ;;AAG1C;;AAEG;IACH,oBAAoB,GAAA;QAClB,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE;QAClB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC;;AAGpD;;;AAGG;IACH,MAAM,GAAA;;QACJ,QACE,CAAA,CAAA,iCAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACE,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,QAAQ,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,EAAE,EACzB,eAAe,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,gBAAgB,EAC9C,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAA,CACU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement"],"sources":["src/components/core/features/presto-email-overlay/component/presto-email-overlay.css?tag=presto-email-overlay","src/components/core/features/presto-email-overlay/component/presto-email-overlay.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, h, Prop, State } from '@stencil/core';\nimport { i18nConfig, presetAttributes } from '../../../../../interfaces';\n\n/**\n * This component is needed to prevent re-rendering of\n * main component with currentTime changes.\n */\n@Component({\n  tag: 'presto-email-overlay',\n  styleUrl: 'presto-email-overlay.css',\n  shadow: false,\n})\nexport class PrestoEmailOverlay {\n  @Prop() player: any;\n  @Prop() direction?: 'rtl';\n  @Prop() preset: presetAttributes;\n  @Prop() videoId: number;\n  @Prop() i18n: i18nConfig;\n  @Prop() provider: string;\n\n  @State() currentTime: number;\n  @State() duration: number;\n  @State() ended: boolean;\n\n  componentWillLoad() {\n    if (!this.player) return;\n    this.player.on('ended', () => this.setEnded());\n    this.player.on('timeupdate', e => this.setCurrentTime(e));\n  }\n\n  setEnded() {\n    this.ended = true;\n  }\n\n  setCurrentTime(e) {\n    this.currentTime = e?.detail?.plyr.currentTime;\n    this.duration = e?.detail?.plyr.duration;\n  }\n\n  /**\n   * Remove listeners if destroyed\n   */\n  disconnectedCallback() {\n    if (!this.player) return;\n    this.player.off('ended', this.setEnded);\n    this.player.off('timeupdate', this.setCurrentTime);\n  }\n\n  /**\n   * Maybe render\n   * @returns JSX\n   */\n  render() {\n    return (\n      <presto-email-overlay-controller\n        ended={this.ended}\n        currentTime={this.currentTime}\n        videoId={this.videoId}\n        duration={this.duration}\n        direction={this.direction}\n        presetId={this.preset?.id}\n        emailCollection={this.preset?.email_collection}\n        i18n={this.i18n}\n        provider={this.provider}\n      ></presto-email-overlay-controller>\n    );\n  }\n}\n"],"version":3}